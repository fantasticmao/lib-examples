version: "3"

services:
  cassandra:
    container_name: lib-examples-cassandra
    image: cassandra:4.1
    ports:
      - "9042:9042"
  elasticsearch:
    container_name: lib-examples-elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.2
    ports:
      - "9200:9200"
    environment:
      - "discovery.type=single-node"
      - "xpack.security.enabled=false"
  etcd:
    container_name: lib-examples-etcd
    image: gcr.io/etcd-development/etcd:v3.5.9
    ports:
      - "2379:2379"
      - "2380:2380"
    command: /usr/local/bin/etcd --name default --listen-client-urls http://0.0.0.0:2379 --advertise-client-urls http://0.0.0.0:2379 --listen-peer-urls http://0.0.0.0:2380 --initial-advertise-peer-urls http://0.0.0.0:2380 --initial-cluster default=http://0.0.0.0:2380
  flink-jobmanager:
    container_name: lib-examples-flink-jobmanager
    image: flink:1.17.1-scala_2.12-java11
    ports:
      - "8081:8081"
    environment:
      - "FLINK_PROPERTIES=jobmanager.rpc.address: lib-examples-flink-jobmanager"
    command: jobmanager
  flink-taskmanager:
    container_name: lib-examples-flink-taskmanager
    image: flink:1.17.1-scala_2.12-java11
    depends_on:
      - flink-jobmanager
    environment:
      - "FLINK_PROPERTIES=jobmanager.rpc.address: lib-examples-flink-jobmanager\ntaskmanager.numberOfTaskSlots: 2"
    command: taskmanager
  httpbin:
    container_name: lib-examples-httpbin
    image: kennethreitz/httpbin
    ports:
      - "8080:80"
  influxdb:
    container_name: lib-examples-influxdb
    image: influxdb:2.1.1
    ports:
      - "8086:8086"
  kafka:
    container_name: lib-examples-kafka
    image: bitnami/kafka:3.4
    ports:
      - "9094:9094"
    environment:
      - "KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true"
      - "KAFKA_CFG_NODE_ID=0"
      - "KAFKA_CFG_PROCESS_ROLES=controller,broker"
      - "KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093"
      - "KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094"
      - "KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094"
      - "KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      - "KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER"
  memcached:
    container_name: lib-examples-memcached
    image: memcached:1.6.12-alpine
    ports:
      - "11211:11211"
  mongodb-0:
    container_name: lib-examples-mongodb-0
    image: mongodb/mongodb-community-server:6.0.4-ubi8
    ports:
      - "27017:27017"
    command: mongod --replSet rs0 --port 27017
  mongodb-1:
    container_name: lib-examples-mongodb-1
    image: mongodb/mongodb-community-server:6.0.4-ubi8
    ports:
      - "27018:27018"
    command: mongod --replSet rs0 --port 27018
  mongodb-2:
    container_name: lib-examples-mongodb-2
    image: mongodb/mongodb-community-server:6.0.4-ubi8
    ports:
      - "27019:27019"
    command: mongod --replSet rs0 --port 27019
  redis:
    container_name: lib-examples-redis
    image: redis:6.2.6-alpine
    ports:
      - "6379:6379"
  zookeeper:
    container_name: lib-examples-zookeeper
    image: zookeeper:3.8
    ports:
      - "2181:2181"
